79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 55 56 57 58 59 60 61 62 63 64 65 66 67 68
81 81 81 74 78 78 82 82 82 82 75 79 79 83 83 83 83 76 80 80 84 84 84 84 77 45 46 46 85 
85 85 78 46 47 47 86 86 86 79 47 48 48 87 87 87 80 48 49 49 88 88 88 81 49 50 50 89 89 
89 82 50 51 51 90 90 90 83 51 52 52 91 91 91 84 52 53 53 92 92 92 85 53 54 54 93 93 93 
86 54 55 55 94 94 94 87 55 56 60 95 95 95 95 63 64 68 57 57 53 46 82 82 86 58 58 54 47 
83 83 87 59 59 55 48 84 84 88 60 60 56 49 85 85 89 61 61 61 54 90 90 94 62 62 62 55 91 
91 95 63 63 63 56 92 92 96 64 64 64 57 93 93 56 65 65 65 58 94 94 57 66 66 66 59 95 95 
58 67 67 67 60 96 96 59 68 68 68 61 97 97 97 69 69 69 62 98 98 98 70 70 70 63 99 99 99 

79:81 81:81 81:81 81:74 74:78 78:78 78:82 
80:82 82:82 82:82 82:75 75:79 79:79 79:83 
81:83 83:83 83:83 83:76 76:80 80:80 80:84 
82:84 84:84 84:84 84:77 77:45 45:46 46:46 
83:85 85:85 85:85 85:78 78:46 46:47 47:47 
84:86 86:86 86:86 86:79 79:47 47:48 48:48 
85:87 87:87 87:87 87:80 80:48 48:49 49:49 
86:88 88:88 88:88 88:81 81:49 49:50 50:50 
87:89 89:89 89:89 89:82 82:50 50:51 51:51 
88:90 90:90 90:90 90:83 83:51 51:52 52:52 
89:91 91:91 91:91 91:84 84:52 52:53 53:53 
90:92 92:92 92:92 92:85 85:53 53:54 54:54 
91:93 93:93 93:93 93:86 86:54 54:55 55:55 
92:94 94:94 94:94 94:87 87:55 55:56 56:60 
93:95 95:95 95:95 95:95 95:63 63:64 64:68 
55:57 57:57 57:53 53:46 46:82 82:82 82:86 
56:58 58:58 58:54 54:47 47:83 83:83 83:87 
57:59 59:59 59:55 55:48 48:84 84:84 84:88 
58:60 60:60 60:56 56:49 49:85 85:85 85:89 
59:61 61:61 61:61 61:54 54:90 90:90 90:94 
60:62 62:62 62:62 62:55 55:91 91:91 91:95 
61:63 63:63 63:63 63:56 56:92 92:92 92:96 
62:64 64:64 64:64 64:57 57:93 93:93 93:56 
63:65 65:65 65:65 65:58 58:94 94:94 94:57 
64:66 66:66 66:66 66:59 59:95 95:95 95:58 
65:67 67:67 67:67 67:60 60:96 96:96 96:59 
66:68 68:68 68:68 68:61 61:97 97:97 97:97 
67:69 69:69 69:69 69:62 62:98 98:98 98:98 
68:70 70:70 70:70 70:63 63:99 99:99 99:99 

seeds: 79 14 55 13

seeds: (79, 92), (55, 67)
        ||  ||
soils: (81, 94)
        ||  ||
ferts: (81, 94)
        ||  ||
water: (81, 94)
        ||  ||
light: (74, 87)
        ||   \\____
        ||    \____\
        ||         \\
       (74, 76, 77, 87)
        ||  ||   \\  \\
temps: (78, 80)  (45, 55)

seed-to-soil map:
50 98 2
52 50 48

soil-to-fertilizer map:
0 15 37
37 52 2
39 0 15

fertilizer-to-water map:
49 53 8
0 11 42
42 0 7
57 7 4

water-to-light map:
88 18 7
18 25 70

light-to-temperature map:
45 77 23
81 45 19
68 64 13

temperature-to-humidity map:
0 69 1
1 0 69

humidity-to-location map:
60 56 37
56 93 4

(00, 55) [implicit]
(56, 59)
(60, 96)

notes: can add i ranges after adding e ranges

locations: 
(00, 55)                                                                                         (56, 59), (60, 96)
(00, 55)                                                                                         
(69), (00, 54)                                                                                   
(65), (00, 44),                                               (77, 99)
(72), (00, 17), (25, 51),                                     (84, 87), (18, 24),       (95, 99)
(72), (11, 28), (36, 52),                 (00, 07), (54, 55), (84, 87), (29, 35),       (95, 99)
(72), (26, 43), (51), (52, 53), (00, 13), (15, 22), (54, 55), (84, 87), (34, 50),       (95, 99)
(70), (26, 43), (99), (50, 51), (00, 13), (15, 22), (52, 53), (82, 85), (34, 49), (50), (93, 97)


given
(B, B+C-1)(A, A+C-1) transforms (00, 69, 01) into (69, 69)(00, 00)
(B, B+C-1)(A, A+C-1) transforms (01, 00, 69) into (00, 68)(01, 69)
desired output (56, 59)
(B, B+C-1)(A, A+C-1) transforms (00, 69, 01) into (69, 69)(00, 00) [discard]
(B, B+C-1)(A, A+C-1) transforms (01, 00, 69) into (00, 68)(01, 69)
(55, 58)(56, 59)

# returns array of references
sub transform ($$) {
  my $target_out_ar = shift;
  my $mapping_ar = shift;

  my ($OUT1, $OUT2) = @$target_out_ar; # (00, 55)
  my @mapping       = @$mapping_ar;    # ((00, 69, 01), (01, 00, 69))

  my @bounds = (); # (((IB1, IB2), (OB1, OB2)), ((IB3, IB4), (OB3, OB4)))
  foreach (@mapping) {
    my ($OB1, $OB2) = @{$_}[$1], @{$_}[$1]+@{$_}[$2]-1;
    my ($IB1, $IB2) = @{$_}[$0], @{$_}[$0]+@{$_}[$2]-1;
    push @bounds, [[$OB1, $OB2], [$IB1, $IB2]];
    if ($OB1 < $OUT1) {
      my $diff = $OUT1 - $OB1;
      $OB1 = $OUT1;
      $IB1 += $diff;
    }
    if ($OUT2 < $OB2) {
      my $diff = $OB2 - $OUT2;
      $OB2 = $OUT2;
      $IB2 -= $diff;
    }
  }
  return @bounds;
}

desired output (00, 55) = (OUT1, OUT2)

(IB1, IB2), (OB1, OB2)
mapping ((00, 69, 01), (01, 00, 69))

(B, B+C-1)(A, A+C-1) transforms (00, 69, 01) into (69, 69)(00, 00)
(B, B+C-1)(A, A+C-1) transforms (01, 00, 69) into (00, 68)(01, 69)

if (OB2 < OUT1 || OUT2 < OB1) {
  // useless range
}

if (OB1 < OUT1) {
  my $diff = OUT1 - OB1;
  OB1 = OUT1;
  IB1 += $diff;
}
if (OUT2 < OB2) {
  my $diff = OB2 - OUT2;
  OB2 = OUT2;
  IB2 -= $diff;
}

provides:
necessary input ((69, 69), (00, 00)), ((00, 54), (01, 55))






